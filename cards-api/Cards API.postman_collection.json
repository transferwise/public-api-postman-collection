{
	"info": {
		"_postman_id": "55c482a3-ae1a-4159-92c2-362a88c8820e",
		"name": "Wise Cards API",
		"description": "This collection describes the required endpoints for a successful bank partner's integration of the Cards API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "1. Generate tokens from authorization code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"",
									"pm.test(\"Are tokens provided\", function () {",
									"    pm.expect(json).to.have.property(\"access_token\");",
									"    pm.expect(json).to.have.property(\"refresh_token\");",
									"    if (!json.access_token || !json.refresh_token) {",
									"        postman.setNextRequest(null);",
									"    }",
									"});",
									"",
									"pm.environment.set(\"token\", json.access_token);",
									"pm.environment.set(\"refresh\", json.refresh_token);",
									"postman.setNextRequest(\"Create batch group\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client-id}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{client-redirect-uri}}",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{client-auth-code}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "Request access token | authorization code grant type"
					},
					"response": []
				},
				{
					"name": "2. Refresh existing access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"",
									"pm.test(\"Are tokens provided\", function () {",
									"    pm.expect(json).to.have.property(\"access_token\");",
									"    if (!json.access_token) {",
									"        postman.setNextRequest(null);",
									"    }",
									"});",
									"",
									"pm.environment.set(\"token\", json.access_token);",
									"postman.setNextRequest(\"Create batch group\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client-id}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "2. Card Issuance",
			"item": [
				{
					"name": "1. Get card order availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders/availability",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders",
								"availability"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get card orders",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get a card order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders/{{card_order_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders",
								"{{card_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Create a card order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileId\": {{profile_id}},\n    \"userId\": {{user_id}},\n    \"program\": \"VISA_DEBIT_BUSINESS_UK_1\",\n    \"cardHolderName\": \"Kristo Käärmann\",\n    \"billingAddress\": {\n        \"firstLine\": \"56 Shoreditch High Street\",\n        \"city\": \"London\",\n        \"postCode\": \"E1 6JJ\",\n        \"country\": \"GB\"\n    },\n    \"phoneNumber\": \"+441234567890\",\n    \"lifetimeLimit\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Card Management",
			"item": [
				{
					"name": "1. Get cards",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get a card",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Set a card status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"status\": \"FROZEN\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get card spending limits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/spending-limits",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"spending-limits"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Add a card spending limit",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cardLimitType\": \"LIFETIME\",\n    \"maxLimitAmount\": 500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/spending-limits",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"spending-limits"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Delete a lifetime limit",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/spending-limits/lifetime",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"spending-limits",
								"lifetime"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Get card transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/transactions?pageSize=10&pageNumber=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"transactions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "pageNumber",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Card transaction simulation",
			"item": [
				{
					"name": "1. Preauthorisation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pos\": \"CHIP_AND_PIN\",\n    \"posTransactionStatus\": \"PREAUTH\",\n    \"amount\": {\n        \"value\": 2050.5,\n        \"currency\": \"AUD\"\n    },\n    \"acquirer\": {\n        \"institutionId\": \"430001\",\n        \"name\": \"Test get details\",\n        \"city\": \"Rouen\",\n        \"merchantCategoryCode\": 5999,\n        \"country\": \"FR\",\n        \"acceptorTerminalId\": \"TERMID01\",\n        \"acceptorIdCode\": \"CARD ACCEPTOR\",\n        \"forwardingInstitutionId\": \"400050\"\n    },\n    \"cardData\": {\n        \"pan\": \"{{pan}}\",\n        \"pin\": \"1234\",\n        \"cvv1\": \"123\",\n        \"icvv\": \"456\",\n        \"cvv2\": \"789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.sandbox.transferwise.tech/v1/simulation/spend/profiles/{{profile_id}}/cards/{{card_token}}/transactions/authorisation",
							"protocol": "https",
							"host": [
								"api",
								"sandbox",
								"transferwise",
								"tech"
							],
							"path": [
								"v1",
								"simulation",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"transactions",
								"authorisation"
							]
						},
						"description": "pos values:\nMINIMAL, CHIP_AND_PIN, CONTACTLESS_CARD, MAGNETIC_STRIPE, E_COMMERCE, MOBILE_WALLET"
					},
					"response": []
				},
				{
					"name": "2a. Authorisation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pos\": \"CHIP_AND_PIN\",\n    \"amount\": {\n        \"value\": 8.12,\n        \"currency\": \"EUR\"\n    },\n    \"acquirer\": {\n        \"institutionId\": \"430001\",\n        \"name\": \"Test payment\",\n        \"city\": \"Rouen\",\n        \"merchantCategoryCode\": 5999,\n        \"country\": \"FR\",\n        \"acceptorTerminalId\": \"TERMID01\",\n        \"acceptorIdCode\": \"CARD ACCEPTOR\",\n        \"forwardingInstitutionId\": \"400050\"\n    },\n    \"cardData\": {\n        \"pan\": \"{{pan}}\",\n        \"pin\": \"1234\",\n        \"cvv1\": \"123\",\n        \"icvv\": \"456\",\n        \"cvv2\": \"789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.sandbox.transferwise.tech/v1/simulation/spend/profiles/{{profile_id}}/cards/{{card_token}}/transactions/authorisation",
							"protocol": "https",
							"host": [
								"api",
								"sandbox",
								"transferwise",
								"tech"
							],
							"path": [
								"v1",
								"simulation",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"transactions",
								"authorisation"
							]
						}
					},
					"response": []
				},
				{
					"name": "2b. Authorisation - ATM Withdrawal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pos\": \"CHIP_AND_PIN\",\n    \"transactionType\": \"CASH_WITHDRAWAL\",\n    \"amount\": {\n        \"value\": 1002.80,\n        \"currency\": \"EUR\"\n    },\n    \"acquirer\": {\n        \"institutionId\": \"430001\",\n        \"name\": \"Test ATM withdrawal\",\n        \"city\": \"Rouen\",\n        \"merchantCategoryCode\": 5999,\n        \"country\": \"FR\",\n        \"acceptorTerminalId\": \"TERMID01\",\n        \"acceptorIdCode\": \"CARD ACCEPTOR\",\n        \"forwardingInstitutionId\": \"400050\"\n    },\n    \"cardData\": {\n        \"pan\": \"{{pan}}\",\n        \"pin\": \"1234\",\n        \"cvv1\": \"123\",\n        \"icvv\": \"456\",\n        \"cvv2\": \"789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.sandbox.transferwise.tech/v1/simulation/spend/profiles/{{profile_id}}/cards/{{card_token}}/transactions/authorisation",
							"protocol": "https",
							"host": [
								"api",
								"sandbox",
								"transferwise",
								"tech"
							],
							"path": [
								"v1",
								"simulation",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"transactions",
								"authorisation"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Dispute",
			"item": [
				{
					"name": "1. Get dispute reasons",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/dispute-form/reasons",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"dispute-form",
								"reasons"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get dispute dynamic forms",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"abc@def.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/dispute-form/flows/step/visa/{{dispute-reason}}?transactionId={{transaction-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"dispute-form",
								"flows",
								"step",
								"visa",
								"{{dispute-reason}}"
							],
							"query": [
								{
									"key": "transactionId",
									"value": "{{transaction-id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Create dispute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"form\": {\n    \"agreedDetails\": {\n      \"agreed\": \"true\"\n    },\n    \"charged\": {\n      \"value\": 8,\n      \"currency\": \"EUR\"\n    },\n    \"expected\": {\n      \"value\": 5,\n      \"currency\": \"EUR\"\n    },\n    \"goods\": \"A book\",\n    \"details\": \"I've not received the book.\"\n  },\n  \"transaction\": {\n    \"transactionId\": \"{{transaction-id}}\",\n    \"amount\": \"50.5 AUD\",\n    \"mcc\": \"5999\",\n    \"status\": \"PENDING\",\n    \"merchantName\": \"Amazon\",\n    \"email\": \"abc@def.com\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/dispute-form/flows/visa/{{dispute-reason}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"dispute-form",
								"flows",
								"visa",
								"{{dispute-reason}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Authorisation rules",
			"item": [
				{
					"name": "1. Add authorisation rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"MCC\",\n        \"operation\": \"BLOCK\",\n        \"description\": \"example rule\",\n        \"values\": [\"5999\"]\n     }"
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/spend-controls/rule/authorisation",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"spend-controls",
								"rule",
								"authorisation"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Delete authorisation rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"MCC\",\n        \"operation\": \"BLOCK\",\n        \"description\": \"example rule\",\n        \"values\": [\"5999\"]\n     }"
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/spend-controls/rule/authorisation/{{rule_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"spend-controls",
								"rule",
								"authorisation",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. List authorisation rules",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"MCC\",\n        \"operation\": \"BLOCK\",\n        \"description\": \"example rule\",\n        \"values\": [\"5999\"]\n     }"
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/spend-controls/rule/authorisation",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"spend-controls",
								"rule",
								"authorisation"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Apply authorisation rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ruleId\": \"{{rule_id}}\",\n    \"scope\": \"CARD\",\n    \"scopeId\": \"{{card_token}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/spend-controls/rule/apply",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"spend-controls",
								"rule",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Unapply authorisation rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ruleId\": \"{{rule_id}}\",\n    \"scope\": \"CARD\",\n    \"scopeId\": \"{{card_token}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/spend-controls/rule/unapply",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"spend-controls",
								"rule",
								"unapply"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. List applied rules",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"MCC\",\n        \"operation\": \"BLOCK\",\n        \"description\": \"example rule\",\n        \"values\": [\"5999\"]\n     }"
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/spend-controls/rule/applied",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"spend-controls",
								"rule",
								"applied"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}